/**
 * This class is generated by jOOQ
 */
package generated.tables;


import generated.Keys;
import generated.Tripreservation;
import generated.tables.records.HotelRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Hotel extends TableImpl<HotelRecord> {

	private static final long serialVersionUID = 1755544000;

	/**
	 * The reference instance of <code>tripreservation.hotel</code>
	 */
	public static final Hotel HOTEL = new Hotel();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<HotelRecord> getRecordType() {
		return HotelRecord.class;
	}

	/**
	 * The column <code>tripreservation.hotel.id</code>.
	 */
	public final TableField<HotelRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>tripreservation.hotel.code</code>.
	 */
	public final TableField<HotelRecord, UInteger> CODE = createField("code", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>tripreservation.hotel.agentCode</code>.
	 */
	public final TableField<HotelRecord, UInteger> AGENTCODE = createField("agentCode", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>tripreservation.hotel.locationCode</code>.
	 */
	public final TableField<HotelRecord, UInteger> LOCATIONCODE = createField("locationCode", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>tripreservation.hotel.includesBreakfast</code>.
	 */
	public final TableField<HotelRecord, UInteger> INCLUDESBREAKFAST = createField("includesBreakfast", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * Create a <code>tripreservation.hotel</code> table reference
	 */
	public Hotel() {
		this("hotel", null);
	}

	/**
	 * Create an aliased <code>tripreservation.hotel</code> table reference
	 */
	public Hotel(String alias) {
		this(alias, HOTEL);
	}

	private Hotel(String alias, Table<HotelRecord> aliased) {
		this(alias, aliased, null);
	}

	private Hotel(String alias, Table<HotelRecord> aliased, Field<?>[] parameters) {
		super(alias, Tripreservation.TRIPRESERVATION, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<HotelRecord, UInteger> getIdentity() {
		return Keys.IDENTITY_HOTEL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<HotelRecord> getPrimaryKey() {
		return Keys.KEY_HOTEL_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<HotelRecord>> getKeys() {
		return Arrays.<UniqueKey<HotelRecord>>asList(Keys.KEY_HOTEL_PRIMARY, Keys.KEY_HOTEL_CODE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Hotel as(String alias) {
		return new Hotel(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Hotel rename(String name) {
		return new Hotel(name, null);
	}
}
