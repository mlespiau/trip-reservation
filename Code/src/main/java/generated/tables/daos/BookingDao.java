/**
 * This class is generated by jOOQ
 */
package generated.tables.daos;


import generated.tables.Booking;
import generated.tables.pojos.BookingPojo;
import generated.tables.records.BookingRecord;

import java.sql.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookingDao extends DAOImpl<BookingRecord, BookingPojo, UInteger> {

	/**
	 * Create a new BookingDao without any configuration
	 */
	public BookingDao() {
		super(Booking.BOOKING, BookingPojo.class);
	}

	/**
	 * Create a new BookingDao with an attached configuration
	 */
	public BookingDao(Configuration configuration) {
		super(Booking.BOOKING, BookingPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected UInteger getId(BookingPojo object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<BookingPojo> fetchById(UInteger... values) {
		return fetch(Booking.BOOKING.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public BookingPojo fetchOneById(UInteger value) {
		return fetchOne(Booking.BOOKING.ID, value);
	}

	/**
	 * Fetch records that have <code>customerCode IN (values)</code>
	 */
	public List<BookingPojo> fetchByCustomercode(UInteger... values) {
		return fetch(Booking.BOOKING.CUSTOMERCODE, values);
	}

	/**
	 * Fetch records that have <code>date IN (values)</code>
	 */
	public List<BookingPojo> fetchByDate(Date... values) {
		return fetch(Booking.BOOKING.DATE, values);
	}
}
