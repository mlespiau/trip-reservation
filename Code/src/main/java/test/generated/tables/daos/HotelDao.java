/**
 * This class is generated by jOOQ
 */
package test.generated.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;

import test.generated.tables.Hotel;
import test.generated.tables.pojos.HotelPojo;
import test.generated.tables.records.HotelRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HotelDao extends DAOImpl<HotelRecord, HotelPojo, UInteger> {

	/**
	 * Create a new HotelDao without any configuration
	 */
	public HotelDao() {
		super(Hotel.HOTEL, HotelPojo.class);
	}

	/**
	 * Create a new HotelDao with an attached configuration
	 */
	public HotelDao(Configuration configuration) {
		super(Hotel.HOTEL, HotelPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected UInteger getId(HotelPojo object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<HotelPojo> fetchById(UInteger... values) {
		return fetch(Hotel.HOTEL.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public HotelPojo fetchOneById(UInteger value) {
		return fetchOne(Hotel.HOTEL.ID, value);
	}

	/**
	 * Fetch records that have <code>code IN (values)</code>
	 */
	public List<HotelPojo> fetchByCode(UInteger... values) {
		return fetch(Hotel.HOTEL.CODE, values);
	}

	/**
	 * Fetch records that have <code>agentCode IN (values)</code>
	 */
	public List<HotelPojo> fetchByAgentcode(UInteger... values) {
		return fetch(Hotel.HOTEL.AGENTCODE, values);
	}

	/**
	 * Fetch records that have <code>locationCode IN (values)</code>
	 */
	public List<HotelPojo> fetchByLocationcode(UInteger... values) {
		return fetch(Hotel.HOTEL.LOCATIONCODE, values);
	}

	/**
	 * Fetch records that have <code>includesBreakfast IN (values)</code>
	 */
	public List<HotelPojo> fetchByIncludesbreakfast(UInteger... values) {
		return fetch(Hotel.HOTEL.INCLUDESBREAKFAST, values);
	}
}
