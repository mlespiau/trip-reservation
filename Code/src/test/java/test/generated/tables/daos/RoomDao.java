/**
 * This class is generated by jOOQ
 */
package test.generated.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;

import test.generated.tables.Room;
import test.generated.tables.pojos.RoomPojo;
import test.generated.tables.records.RoomRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoomDao extends DAOImpl<RoomRecord, RoomPojo, UInteger> {

	/**
	 * Create a new RoomDao without any configuration
	 */
	public RoomDao() {
		super(Room.ROOM, RoomPojo.class);
	}

	/**
	 * Create a new RoomDao with an attached configuration
	 */
	public RoomDao(Configuration configuration) {
		super(Room.ROOM, RoomPojo.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected UInteger getId(RoomPojo object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<RoomPojo> fetchById(UInteger... values) {
		return fetch(Room.ROOM.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public RoomPojo fetchOneById(UInteger value) {
		return fetchOne(Room.ROOM.ID, value);
	}

	/**
	 * Fetch records that have <code>code IN (values)</code>
	 */
	public List<RoomPojo> fetchByCode(UInteger... values) {
		return fetch(Room.ROOM.CODE, values);
	}

	/**
	 * Fetch records that have <code>hotelId IN (values)</code>
	 */
	public List<RoomPojo> fetchByHotelid(UInteger... values) {
		return fetch(Room.ROOM.HOTELID, values);
	}

	/**
	 * Fetch records that have <code>adultSpace IN (values)</code>
	 */
	public List<RoomPojo> fetchByAdultspace(UInteger... values) {
		return fetch(Room.ROOM.ADULTSPACE, values);
	}

	/**
	 * Fetch records that have <code>childrenSpace IN (values)</code>
	 */
	public List<RoomPojo> fetchByChildrenspace(UInteger... values) {
		return fetch(Room.ROOM.CHILDRENSPACE, values);
	}
}
